<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.hit.dao.QnaDao">

	<select id="QnaList" parameterType="hashmap"
		resultType="kr.co.hit.dto.QnaDto">

		<!-- 커뮤니티 리스트 전체 출력 -->
		<!-- SELECT * FROM ( -->
		<!-- SELECT -->
		<!-- A.*, -->
		<!-- @rownum := @rownum + 1 AS r -->
		<!-- FROM -->
		<!-- (SELECT -->
		<!-- BOARD.*, MEMBER.nickname, MEMBER.grade FROM BOARD -->
		<!-- INNER JOIN MEMBER ON -->
		<!-- BOARD.member_no = MEMBER.member_no -->
		<!-- WHERE cat_no =1 ORDER BY b_no DESC) -->
		<!-- A, -->
		<!-- (SELECT @rownum := 0) R -->
		<!-- ) B -->
		<!-- WHERE r BETWEEN #{start} AND #{end} -->



		SELECT *
		FROM (
		SELECT
		A.*,
		@rownum := @rownum + 1 AS r
		FROM (
		SELECT
		BOARD.*,
		MEMBER.nickname,
		MEMBER.grade,
		TOPIC.topic_name
		FROM BOARD
		INNER
		JOIN MEMBER ON BOARD.member_no = MEMBER.member_no
		left OUTER JOIN TOPIC
		ON BOARD.topic_no = TOPIC.topic_no
		WHERE BOARD.cat_no = 2
		ORDER BY b_no
		DESC
		) A,
		(SELECT @rownum := 0) R
		) B
		WHERE r BETWEEN #{start} AND #{end};

	</select>

	<select id="getPostsByTopic2" parameterType="hashmap"
		resultType="kr.co.hit.dto.QnaDto">

		SELECT *
		FROM (
		SELECT
		A.*,
		@rownum := @rownum + 1 AS r
		FROM (
		SELECT
		BOARD.*,
		MEMBER.nickname,
		TOPIC.topic_name
		FROM BOARD
		INNER JOIN MEMBER ON BOARD.member_no = MEMBER.member_no
		LEFT OUTER JOIN TOPIC ON BOARD.topic_no = TOPIC.topic_no
		WHERE BOARD.cat_no = 2 AND BOARD.topic_no = #{topicNo}
		ORDER BY b_no DESC) A,
		(SELECT @rownum := 0) R
		) B WHERE r BETWEEN #{start} AND #{end}


	</select>

	<select id="getQnaCount" resultType="Integer">

		SELECT COUNT(*) FROM
		BOARD WHERE CAT_NO = 2;

	</select>

	<select id="searchByTitle2" parameterType="String"
		resultType="kr.co.hit.dto.QnaDto">

		SELECT * FROM BOARD WHERE cat_no = 2 and b_title LIKE
		CONCAT('%', #{title}, '%')

	</select>



	<insert id="InsertQna"
		parameterType="kr.co.hit.dto.QnaDto">

		INSERT INTO BOARD (b_no, b_title, b_content,
		b_write_date, b_view,
		b_reply, b_recommend, member_no,
		cat_no, topic_no)
		VALUES ((SELECT *
		FROM (SELECT IFNULL(MAX(b_no),0) + 1 AS max_b_no FROM
		BOARD) AS tmp),
		#{b_title}, #{b_content}, current_timestamp,
		0 , 0 , 0 ,
		#{member_no} ,
		2 , #{topic_no})

	</insert>

	<!-- 주어진 토픽 이름에 해당하는 토픽 번호를 조회, 새 게시글을 작성할 때 사용자가 선택한 토픽의 번호를 알아내기 위해 사용 -->
	<select id="getTopicNoByTopicName2" parameterType="String"
		resultType="int">
		SELECT topic_no FROM TOPIC WHERE topic_name = #{topic_name}
	</select>

	<select id="getQnaDetail"
		resultType="kr.co.hit.dto.QnaDto" parameterType="int">

		<!-- 글 상세보기 -->
		<!-- select b_no, -->
		<!-- b_title, -->
		<!-- b_content, -->
		<!-- b_view -->
		<!-- from -->
		<!-- BOARD -->
		<!-- where b_no = #{b_no} -->


		<!-- SELECT -->
		<!-- BOARD.b_no, -->
		<!-- BOARD.b_title, -->
		<!-- BOARD.b_content, -->
		<!-- BOARD.b_view, -->
		<!-- MEMBER.nickname -->
		<!-- FROM -->
		<!-- BOARD -->
		<!-- INNER JOIN -->
		<!-- MEMBER ON BOARD.member_no = -->
		<!-- MEMBER.member_no -->
		<!-- WHERE -->
		<!-- BOARD.b_no = #{b_no}; -->


		SELECT
		BOARD.b_no,
		BOARD.b_title,
		BOARD.b_content,
		BOARD.b_view,
		MEMBER.nickname,
		(SELECT COUNT(*) FROM REPLY WHERE b_no = BOARD.b_no)
		AS reply_count
		FROM
		BOARD
		INNER JOIN
		MEMBER ON BOARD.member_no =
		MEMBER.member_no
		WHERE
		BOARD.b_no = #{b_no};


	</select>

	<select id="getPostCountByTopic2" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM BOARD WHERE cat_no = 2 AND topic_no =
		#{topicNo}
	</select>

	<update id="updateQna"
		parameterType="kr.co.hit.dto.QnaDto">

		<!-- 글 수정 (토픽, 태그 추가 안됨) -->
		update BOARD set
		b_title=#{b_title},
		b_content=#{b_content} 
		where b_no =
		#{b_no}

	</update>

<!-- 	<update id="updateView2" parameterType="int"> -->


<!-- 		UPDATE BOARD SET B_VIEW = B_VIEW + 1 -->
<!-- 		WHERE b_no = #{b_no} -->

<!-- 	</update> -->

	<delete id="deleteQna" parameterType="int">

		<!-- 게시글 삭제 -->
		delete from BOARD where b_no = #{b_no}
	</delete>
</mapper>