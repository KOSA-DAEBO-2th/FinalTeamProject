<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- properties -->
	<context:property-placeholder
		location="/resources/xml.properties" />

	<!-- JDBC hikariCP -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!--HikariCP Configuration -->
	<bean id="driverManagerDataSource"
		class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>

	<!-- JDBC Template -->
	<!-- <bean id="" class="org.springframework.jdbc.core.JdbcTemplate"> <property 
		name="dataSource" ref="driverManagerDataSource" /> </bean> -->

	<!-- mybatis -->
	<mybatis-spring:scan base-package="kr.co.hit.dao" />

	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="driverManagerDataSource"></property>
		<property name="mapperLocations"
			value="classpath*:kr/co/hit/mappers/*xml" />
	</bean>

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactoryBean" />
	</bean>

	<!-- 트랜잭션 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="driverManagerDataSource"></property> <!-- 해당 session의 transaction을 관리하겠다 -->
	</bean>



	<!-- 메일 보내기 (SEND) -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="465" />
		<property name="username" value="${mail.id}" />
		<property name="password" value="${mail.pwd}" />
		<property name="defaultEncoding" value="utf-8" />

		<!-- email 요청시는 SMTP -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
				<prop key="mail.smtps.ssl.trust">*</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- 파일 업로드 보조(반드시) -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="209715200"></property>
		<property name="maxInMemorySize" value="1048576"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
</beans>
